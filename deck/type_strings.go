// Code generated by "stringer -type=SuitType,ValueType -output=type_strings.go"; DO NOT EDIT.

package deck

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Spades-1]
	_ = x[Diamonds-2]
	_ = x[Clubs-3]
	_ = x[Hearts-4]
	_ = x[Joker-5]
}

const _SuitType_name = "SpadesDiamondsClubsHeartsJoker"

var _SuitType_index = [...]uint8{0, 6, 14, 19, 25, 30}

func (i SuitType) String() string {
	i -= 1
	if i < 0 || i >= SuitType(len(_SuitType_index)-1) {
		return "SuitType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _SuitType_name[_SuitType_index[i]:_SuitType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Ace-1]
	_ = x[Two-2]
	_ = x[Three-3]
	_ = x[Four-4]
	_ = x[Five-5]
	_ = x[Six-6]
	_ = x[Seven-7]
	_ = x[Eight-8]
	_ = x[Nine-9]
	_ = x[Ten-10]
	_ = x[Jack-11]
	_ = x[Queen-12]
	_ = x[King-13]
}

const _ValueType_name = "AceTwoThreeFourFiveSixSevenEightNineTenJackQueenKing"

var _ValueType_index = [...]uint8{0, 3, 6, 11, 15, 19, 22, 27, 32, 36, 39, 43, 48, 52}

func (i ValueType) String() string {
	i -= 1
	if i < 0 || i >= ValueType(len(_ValueType_index)-1) {
		return "ValueType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ValueType_name[_ValueType_index[i]:_ValueType_index[i+1]]
}
